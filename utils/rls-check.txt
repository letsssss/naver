# Supabase RLS 정책 확인하기

## 1. messages 테이블의 정책 확인

```sql
-- 현재 테이블의 RLS 정책 조회
SELECT * FROM pg_policies 
WHERE tablename = 'messages';
```

## 2. messages 테이블에 올바른 RLS 정책 설정하기

```sql
-- 메시지는 해당 채팅방 참여자만 보고 쓸 수 있어야 함
-- 1. 채팅방 참여자가 메시지 읽기 가능
CREATE POLICY "메시지 읽기" ON "public"."messages"
FOR SELECT
USING (
  auth.uid() IN (
    SELECT buyer_id FROM rooms WHERE id = room_id
    UNION
    SELECT seller_id FROM rooms WHERE id = room_id
  )
);

-- 2. 채팅방 참여자가 메시지 생성 가능
CREATE POLICY "메시지 쓰기" ON "public"."messages"
FOR INSERT
WITH CHECK (
  auth.uid() IN (
    SELECT buyer_id FROM rooms WHERE id = room_id
    UNION
    SELECT seller_id FROM rooms WHERE id = room_id
  )
);

-- 3. 채팅방 참여자 중 자신의 메시지만 수정 가능
CREATE POLICY "메시지 수정" ON "public"."messages"
FOR UPDATE
USING (auth.uid() = sender_id)
WITH CHECK (auth.uid() = sender_id);
```

## 3. RLS 활성화 확인하기

```sql
-- 테이블의 RLS 활성화 여부 확인
SELECT tablename, rowsecurity 
FROM pg_tables 
WHERE schemaname = 'public' AND tablename = 'messages';
```

## 4. JWT 값이 제대로 설정되었는지 확인

클라이언트에서:
```js
// browser console에서 실행
const token = JSON.parse(localStorage.getItem('supabase.auth.token'))?.currentSession?.access_token;
console.log('JWT Access Token:', token);

// 또는 더 간단하게
const sb = createClientComponentClient();
sb.auth.getSession().then(({ data }) => console.log('세션:', data.session?.access_token));
``` 