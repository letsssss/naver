[1mdiff --git a/app/api/notifications/route.ts b/app/api/notifications/route.ts[m
[1mindex 36c5500..26c00fd 100644[m
[1m--- a/app/api/notifications/route.ts[m
[1m+++ b/app/api/notifications/route.ts[m
[36m@@ -62,7 +62,8 @@[m [mexport async function OPTIONS() {[m
 [m
 // ✅ 인증된 사용자만 접근 가능한 API 기본 템플릿[m
 export async function GET() {[m
[31m-  const supabase = createRouteHandlerClient();[m
[32m+[m[32m  const cookieStore = cookies();[m[41m[m
[32m+[m[32m  const supabase = createRouteHandlerClient({ cookies: cookieStore });[m[41m[m
 [m
   const {[m
     data: { session },[m
[1mdiff --git a/lib/supabase-server.ts b/lib/supabase-server.ts[m
[1mindex 843bc68..abdb1c0 100644[m
[1m--- a/lib/supabase-server.ts[m
[1m+++ b/lib/supabase-server.ts[m
[36m@@ -1,6 +1,7 @@[m
 import { createServerClient, type CookieOptions } from '@supabase/ssr';[m
 import { cookies } from 'next/headers';[m
 import type { Database } from '@/types/supabase.types';[m
[32m+[m[32mimport { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';[m
 [m
 // ✅ Pages Router와 App Router 모두에서 사용 가능한 createServerSupabaseClient[m
 export async function createServerSupabaseClient() {[m
[36m@@ -24,21 +25,20 @@[m [mexport async function createServerSupabaseClient() {[m
 }[m
 [m
 // ✅ API 라우트에서 사용할 수 있는 createRouteHandlerClient[m
[31m-export function createRouteHandlerClient() {[m
[31m-  const cookieStore = cookies();[m
[32m+[m[32mexport function createRouteHandlerClient({ cookies }: { cookies: ReadonlyRequestCookies }) {[m
   return createServerClient<Database>([m
     process.env.NEXT_PUBLIC_SUPABASE_URL!,[m
     process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,[m
     {[m
       cookies: {[m
         get(name: string) {[m
[31m-          return cookieStore.get(name)?.value;[m
[32m+[m[32m          return cookies.get(name)?.value;[m
         },[m
         set(name: string, value: string, options: CookieOptions) {[m
[31m-          cookieStore.set(name, value, options);[m
[32m+[m[32m          cookies.set(name, value, options);[m
         },[m
         remove(name: string, options: CookieOptions) {[m
[31m-          cookieStore.set(name, '', { ...options, maxAge: 0 });[m
[32m+[m[32m          cookies.set(name, '', { ...options, maxAge: 0 });[m
         }[m
       }[m
     }[m
